name: Compare Metadata Between Two Salesforce Orgs

on:
  workflow_dispatch:

jobs:
  compare-metadata:
    runs-on: ubuntu-latest

    env:
      ORG1_ALIAS: Org1
      ORG2_ALIAS: Org2

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Salesforce CLI and Plugin
        run: |
          npm install -g @salesforce/cli
          sf plugins install sfdx-git-delta

      - name: Create Salesforce DX Project and Prepare Directories
        run: |
          # Generate the project with default package directory "force-app"
          sf project generate --name MetadataCompare --default-package-dir force-app
          # Ensure the "force-app" folder exists as declared in the configuration
          mkdir -p force-app
          # Overwrite sfdx-project.json with a configuration that only declares a single, existing package directory
          echo '{
            "packageDirectories": [
              {"path": "force-app", "default": true}
            ],
            "sourceApiVersion": "58.0"
          }' > sfdx-project.json

      - name: Authenticate to Org1
        run: |
          echo "${{ secrets.SFDX_AUTH_ORG1_URL }}" > auth-org1.txt
          sf org login sfdx-url --sfdx-url-file auth-org1.txt --alias $ORG1_ALIAS --set-default

      - name: Retrieve Org1 Metadata
        run: |
          # Retrieve into a non-conflicting directory "org1-retrieve"
          sf project retrieve start --target-org $ORG1_ALIAS --output-dir org1-retrieve

      - name: Authenticate to Org2
        run: |
          echo "${{ secrets.SFDX_AUTH_ORG2_URL }}" > auth-org2.txt
          sf org login sfdx-url --sfdx-url-file auth-org2.txt --alias $ORG2_ALIAS

      - name: Retrieve Org2 Metadata
        run: |
          # Retrieve into a non-conflicting directory "org2-retrieve"
          sf project retrieve start --target-org $ORG2_ALIAS --output-dir org2-retrieve

      - name: Generate Delta Package
        run: |
          mkdir -p delta
          sf sgd source delta --source org1-retrieve --target org2-retrieve --output delta
          echo "Generated delta package:"
          ls -la delta/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: metadata-delta-package
          path: delta/

      - name: Clean Up
        if: always()
        run: rm -f auth-org*.txt
